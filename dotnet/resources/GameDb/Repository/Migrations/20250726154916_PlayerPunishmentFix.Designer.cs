// <auto-generated />
using System;
using System.Collections.Generic;
using GameDb.Domain.Models;
using GameDb.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GameDb.Repository.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20250726154916_PlayerPunishmentFix")]
    partial class PlayerPunishmentFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("GameDb.Domain.Entities.AddressEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AddressName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("GameDb.Domain.Entities.GarageEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<byte>("MaxVehicleCount")
                        .HasColumnType("smallint");

                    b.Property<long?>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<PositionModel[]>("VehicleSpawnPoints")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Garages");
                });

            modelBuilder.Entity("GameDb.Domain.Entities.InfrastructureBuildingEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long>("SocialClubId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("SocialClubId");

                    b.ToTable("InfrastructureBuildings");
                });

            modelBuilder.Entity("GameDb.Domain.Entities.InventoryEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<List<List<InventoryCellModel>>>("Cells")
                        .HasColumnType("jsonb");

                    b.Property<List<InventoryItemModel>>("Items")
                        .HasColumnType("jsonb");

                    b.Property<byte>("MaxWeight")
                        .HasColumnType("smallint");

                    b.Property<byte>("TotalWeight")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("GameDb.Domain.Entities.ItemEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<List<List<InventoryCellModel>>>("DefaultCells")
                        .HasColumnType("jsonb");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("HasDurability")
                        .HasColumnType("boolean");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<byte>("MaxStackSize")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<ItemUsageModel>("Usage")
                        .HasColumnType("jsonb");

                    b.Property<byte>("Weight")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("GameDb.Domain.Entities.PlayerEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("BankBalance")
                        .HasColumnType("bigint");

                    b.Property<long?>("BankCardNumber")
                        .HasColumnType("bigint");

                    b.Property<long?>("BankCardPIN")
                        .HasColumnType("bigint");

                    b.Property<byte>("Breath")
                        .HasColumnType("smallint");

                    b.Property<byte>("BreathHoldingSkill")
                        .HasColumnType("smallint");

                    b.Property<long>("Cash")
                        .HasColumnType("bigint");

                    b.Property<byte>("DrivingSkill")
                        .HasColumnType("smallint");

                    b.Property<byte>("Endurance")
                        .HasColumnType("smallint");

                    b.Property<byte>("FishingSkill")
                        .HasColumnType("smallint");

                    b.Property<byte>("FlyingSkill")
                        .HasColumnType("smallint");

                    b.Property<byte>("HP")
                        .HasColumnType("smallint");

                    b.Property<byte>("Hunger")
                        .HasColumnType("smallint");

                    b.Property<byte>("HuntingSkill")
                        .HasColumnType("smallint");

                    b.Property<long>("InventoryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("boolean");

                    b.Property<long>("JarvisBalance")
                        .HasColumnType("bigint");

                    b.Property<string>("Nickname")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<TimeSpan>("PlayedToday")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("PlayedTotal")
                        .HasColumnType("interval");

                    b.Property<PositionModel>("Position")
                        .HasColumnType("jsonb");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<byte>("ShootingSkill")
                        .HasColumnType("smallint");

                    b.Property<long?>("SocialClubId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SpawnPlaceId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Stamina")
                        .HasColumnType("smallint");

                    b.Property<byte>("Stealth")
                        .HasColumnType("smallint");

                    b.Property<byte>("Strength")
                        .HasColumnType("smallint");

                    b.Property<byte>("Thirst")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId")
                        .IsUnique();

                    b.HasIndex("Nickname")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.HasIndex("SocialClubId");

                    b.HasIndex("SpawnPlaceId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("GameDb.Domain.Entities.PunishmentEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("AdminId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CancelledById")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("boolean");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Timeout")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CancelledById");

                    b.HasIndex("PlayerId");

                    b.ToTable("Punishments");
                });

            modelBuilder.Entity("GameDb.Domain.Entities.RealEstateEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<byte>("MaxResidentCount")
                        .HasColumnType("smallint");

                    b.Property<long?>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<PositionModel>("SpawnPoint")
                        .HasColumnType("jsonb");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("OwnerId");

                    b.ToTable("RealEstates");
                });

            modelBuilder.Entity("GameDb.Domain.Entities.ResidenceEntity", b =>
                {
                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<long>("RealEstateId")
                        .HasColumnType("bigint");

                    b.HasKey("PlayerId", "RealEstateId");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.HasIndex("RealEstateId");

                    b.ToTable("Residences");
                });

            modelBuilder.Entity("GameDb.Domain.Entities.RoleEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<IEnumerable<string>>("Permissions")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GameDb.Domain.Entities.SocialClubEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SocialClubs");
                });

            modelBuilder.Entity("GameDb.Domain.Entities.VehicleEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<VehicleColorModel>("Color")
                        .HasColumnType("jsonb");

                    b.Property<float?>("CurrentFuel")
                        .HasColumnType("real");

                    b.Property<float>("FuelConsumption")
                        .HasColumnType("real");

                    b.Property<float>("Mileage")
                        .HasColumnType("real");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<string>("NumberPlate")
                        .HasColumnType("text");

                    b.Property<long?>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<PositionModel>("Position")
                        .HasColumnType("jsonb");

                    b.Property<float>("TankCapacity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("GameDb.Domain.Entities.GarageEntity", b =>
                {
                    b.HasOne("GameDb.Domain.Entities.AddressEntity", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDb.Domain.Entities.PlayerEntity", "Owner")
                        .WithMany("Garages")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("GameDb.Domain.Entities.InfrastructureBuildingEntity", b =>
                {
                    b.HasOne("GameDb.Domain.Entities.AddressEntity", "Address")
                        .WithOne("InfrastructureBuilding")
                        .HasForeignKey("GameDb.Domain.Entities.InfrastructureBuildingEntity", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDb.Domain.Entities.SocialClubEntity", "SocialClub")
                        .WithMany("InfrastructureBuildings")
                        .HasForeignKey("SocialClubId");
                });

            modelBuilder.Entity("GameDb.Domain.Entities.PlayerEntity", b =>
                {
                    b.HasOne("GameDb.Domain.Entities.InventoryEntity", "Inventory")
                        .WithOne("Player")
                        .HasForeignKey("GameDb.Domain.Entities.PlayerEntity", "InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDb.Domain.Entities.RoleEntity", "Role")
                        .WithMany("Players")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDb.Domain.Entities.SocialClubEntity", "SocialClub")
                        .WithMany("Players")
                        .HasForeignKey("SocialClubId");

                    b.HasOne("GameDb.Domain.Entities.RealEstateEntity", "SpawnPlace")
                        .WithMany()
                        .HasForeignKey("SpawnPlaceId");
                });

            modelBuilder.Entity("GameDb.Domain.Entities.PunishmentEntity", b =>
                {
                    b.HasOne("GameDb.Domain.Entities.PlayerEntity", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDb.Domain.Entities.PlayerEntity", "CancelledBy")
                        .WithMany()
                        .HasForeignKey("CancelledById");

                    b.HasOne("GameDb.Domain.Entities.PlayerEntity", "Player")
                        .WithMany("Punishments")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameDb.Domain.Entities.RealEstateEntity", b =>
                {
                    b.HasOne("GameDb.Domain.Entities.AddressEntity", "Address")
                        .WithMany("RealEstates")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDb.Domain.Entities.PlayerEntity", "Owner")
                        .WithMany("RealEstates")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("GameDb.Domain.Entities.ResidenceEntity", b =>
                {
                    b.HasOne("GameDb.Domain.Entities.PlayerEntity", "Player")
                        .WithOne("Residence")
                        .HasForeignKey("GameDb.Domain.Entities.ResidenceEntity", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameDb.Domain.Entities.RealEstateEntity", "RealEstate")
                        .WithMany("Residences")
                        .HasForeignKey("RealEstateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameDb.Domain.Entities.VehicleEntity", b =>
                {
                    b.HasOne("GameDb.Domain.Entities.PlayerEntity", "Owner")
                        .WithMany("Vehicles")
                        .HasForeignKey("OwnerId");
                });
#pragma warning restore 612, 618
        }
    }
}
